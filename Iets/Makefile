#############################################################################
# Makefile for building: ha
# Generated by qmake (2.01a) (Qt 4.8.6) on: Thu Dec 8 23:35:44 2016
# Project:  ha.pro
# Template: app
# Command: /usr/lib/arm-linux-gnueabihf/qt4/bin/qmake -o Makefile ha.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_WEBKIT -DQT_NO_DEBUG -DQT_SQL_LIB -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -std=c++11 -lpthread -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4/QtSql -I/usr/include/qt4 -I. -I. -I.
LINK          = g++
LFLAGS        = -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib/arm-linux-gnueabihf -lQtSql -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/lib/arm-linux-gnueabihf/qt4/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = dialog.cpp \
		DrukSensor.cpp \
		GPIO.cpp \
		gui.cpp \
		Lamp.cpp \
		MotieSensor.cpp \
		screenafterlogin.cpp \
		Sensor.cpp \
		Source.cpp moc_dialog.cpp \
		moc_gui.cpp \
		I2C.cpp \
		moc_screenafterlogin.cpp
OBJECTS       = dialog.o \
		DrukSensor.o \
		GPIO.o \
		gui.o \
		Lamp.o \
		MotieSensor.o \
		screenafterlogin.o \
		Sensor.o \
		Source.o \
		moc_dialog.o \
		moc_gui.o \
		I2C.o \
		moc_screenafterlogin.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/shared.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		ha.pro
QMAKE_TARGET  = ha
DESTDIR       = 
TARGET        = ha

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): ui_dialog.h ui_gui.h ui_screenafterlogin.h $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: ha.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/shared.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/arm-linux-gnueabihf/libQtSql.prl \
		/usr/lib/arm-linux-gnueabihf/libQtGui.prl \
		/usr/lib/arm-linux-gnueabihf/libQtCore.prl
	$(QMAKE) -o Makefile ha.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_webkit.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/shared.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/arm-linux-gnueabihf/libQtSql.prl:
/usr/lib/arm-linux-gnueabihf/libQtGui.prl:
/usr/lib/arm-linux-gnueabihf/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile ha.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/ha1.0.0 || $(MKDIR) .tmp/ha1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/ha1.0.0/ && $(COPY_FILE) --parents dialog.h DrukSensor.h GPIO.h gui.h I2C.h Lamp.h MotieSensor.h screenafterlogin.h Sensor.h .tmp/ha1.0.0/ && $(COPY_FILE) --parents dialog.cpp DrukSensor.cpp GPIO.cpp gui.cpp Lamp.cpp MotieSensor.cpp screenafterlogin.cpp Sensor.cpp Source.cpp .tmp/ha1.0.0/ && $(COPY_FILE) --parents dialog.ui gui.ui screenafterlogin.ui .tmp/ha1.0.0/ && (cd `dirname .tmp/ha1.0.0` && $(TAR) ha1.0.0.tar ha1.0.0 && $(COMPRESS) ha1.0.0.tar) && $(MOVE) `dirname .tmp/ha1.0.0`/ha1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/ha1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_dialog.cpp moc_gui.cpp moc_screenafterlogin.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_dialog.cpp moc_gui.cpp moc_screenafterlogin.cpp
moc_dialog.cpp: screenafterlogin.h \
		dialog.h
	/usr/lib/arm-linux-gnueabihf/qt4/bin/moc $(DEFINES) $(INCPATH) dialog.h -o moc_dialog.cpp

moc_gui.cpp: gui.h
	/usr/lib/arm-linux-gnueabihf/qt4/bin/moc $(DEFINES) $(INCPATH) gui.h -o moc_gui.cpp

moc_screenafterlogin.cpp: screenafterlogin.h
	/usr/lib/arm-linux-gnueabihf/qt4/bin/moc $(DEFINES) $(INCPATH) screenafterlogin.h -o moc_screenafterlogin.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_dialog.h ui_gui.h ui_screenafterlogin.h
compiler_uic_clean:
	-$(DEL_FILE) ui_dialog.h ui_gui.h ui_screenafterlogin.h
ui_dialog.h: dialog.ui
	/usr/lib/arm-linux-gnueabihf/qt4/bin/uic dialog.ui -o ui_dialog.h

ui_gui.h: gui.ui
	/usr/lib/arm-linux-gnueabihf/qt4/bin/uic gui.ui -o ui_gui.h

ui_screenafterlogin.h: screenafterlogin.ui
	/usr/lib/arm-linux-gnueabihf/qt4/bin/uic screenafterlogin.ui -o ui_screenafterlogin.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_uic_clean 

####### Compile

dialog.o: dialog.cpp dialog.h \
		screenafterlogin.h \
		ui_dialog.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o dialog.o dialog.cpp

DrukSensor.o: DrukSensor.cpp DrukSensor.h \
		Sensor.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o DrukSensor.o DrukSensor.cpp

GPIO.o: GPIO.cpp GPIO.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o GPIO.o GPIO.cpp

gui.o: gui.cpp gui.h \
		ui_gui.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o gui.o gui.cpp

Lamp.o: Lamp.cpp Lamp.h \
		GPIO.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Lamp.o Lamp.cpp

MotieSensor.o: MotieSensor.cpp MotieSensor.h \
		Sensor.h \
		Lamp.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o MotieSensor.o MotieSensor.cpp

screenafterlogin.o: screenafterlogin.cpp screenafterlogin.h \
		ui_screenafterlogin.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o screenafterlogin.o screenafterlogin.cpp

Sensor.o: Sensor.cpp Sensor.h \
		I2C.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Sensor.o Sensor.cpp

Source.o: Source.cpp GPIO.h \
		Sensor.h \
		DrukSensor.h \
		Lamp.h \
		MotieSensor.h \
		I2C.h \
		dialog.h \
		screenafterlogin.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Source.o Source.cpp

moc_dialog.o: moc_dialog.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_dialog.o moc_dialog.cpp

moc_gui.o: moc_gui.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_gui.o moc_gui.cpp

moc_screenafterlogin.o: moc_screenafterlogin.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_screenafterlogin.o moc_screenafterlogin.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

